# File need for CD
steps:
# ============================== CLEANING STEPS ==============================
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl delete services ${_CORE_SERVICE_NAME} || exit 0
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl delete deployments ${_CORE_DEPLOYMENT_NAME} || exit 0
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl delete ingress ${_CORE_INGRESS_NAME} || exit 0
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl delete backendconfig ${_CORE_BACKENDCONFIG_NAME} || exit 0
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# ============================== BUILDING STEPS ==============================
# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/envoy:${_IMAGE_VERSION}', '-f', 'config/envoy_updated.Dockerfile', 'config/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/envoy:${_IMAGE_VERSION}']
# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-server:${_IMAGE_VERSION}', 'agent-dialogue-core/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-server:${_IMAGE_VERSION}']

# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-health-proxy:${_IMAGE_VERSION}', '-f', 'agent-dialogue-core/grpc_health_proxy.Dockerfile', 'agent-dialogue-core/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-health-proxy:${_IMAGE_VERSION}']

# ============================== DEPLOYMENT STEPS ==============================
# Deploy container image to GKE

# Configure service backend 
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - agent-dialogue-core/deployment_config/${_K8_BACKEND_CONFIG_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Configure frontend
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - agent-dialogue-core/deployment_config/${_FRONTEND_CONFIG_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Deploy service and pods
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - config/${_K8_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Deploy Ingress
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - agent-dialogue-core/deployment_config/${_K8_INGRESS_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

substitutions:
  _ARTIFACT_REGISTRY_REPOSITORY: task-mad-images-repository 
  _IMAGE_VERSION: latest
  _FRONTEND_CONFIG_FILE: frontend_config.yaml
  _K8_FILE: deployment-envoy.yaml
  _K8_BACKEND_CONFIG_FILE: backend-config.yaml
  _K8_INGRESS_FILE: esp_core_managed_cert_ingress.yaml
  _CLUSTER_LOCATION: europe-central2-a
  _CLUSTER_NAME: esp-core-cluster
  _CORE_SERVICE_NAME: esp-core-envoy
  _CORE_DEPLOYMENT_NAME: esp-core
  _CORE_INGRESS_NAME: esp-core-managed-cert-ingress
  _CORE_BACKENDCONFIG_NAME: esp-core-backend-config

  
# Timeout for 30 mins
timeout: 1800s