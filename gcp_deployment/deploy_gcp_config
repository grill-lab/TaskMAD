# TaskMAD Google Cloud deployment parameters

# Cross-deployment parameters
# ===========================
# compute region for the deployment, e.g. europe-west2. Different zones may have different
# costs associated with them
declare -r region="europe-west4"
# compute zone for the deployment (this should be a zone within the above region, e.g. europe-west2-a)
declare -r zone="${region}-b"
# the names of the services that are required for the deployments:
# - Kubernetes Engine API
# - Artifact Registry API
# - Compute Engine API
declare -a required_services=( container.googleapis.com artifactregistry.googleapis.com compute.googleapis.com )
# label used to identify the artifact repository created to store the Docker images required
# by the Kubernetes deployment
declare -r repo_name="taskmad-repo"
# deployment names for use by the script (should match the names used below)
# can be overridden with DEPLOYMENTS env var if needed
declare -a deployments=( ${DEPLOYMENTS:-core chat search woz} )
# URL of the JSON configuration file (see https://github.com/grill-lab/TaskMAD/#configuration-file)
declare -a config_url="https://www.dcs.gla.ac.uk/~adr/taskmad.json"
# URL of the JSON recipes file used by the chat service
declare -a recipe_url="http://gem.cs.ru.nl/grad-pkg/radboud_taskmad.json"
# URL of the JSON topic data file
declare -a data_url="http://gem.cs.ru.nl/grad-pkg/radboud_taskmad_data.json"
# URL of the topic spreadsheet file for WoZ
declare -a spreadsheet_url="http://gem.cs.ru.nl/grad-pkg/self-dialogue_input_excel.xlsx"
# name of the temporary VM used during deployment to format disks
declare -a vm_name="tempvm"
# phases of resource creation the script goes through. These can be 
# overridden to skip creating unnecessary resources or already-existing resources
# through the PHASES env var
declare -a create_phases=( ${PHASES:-services tier repo ips images disks clusters} )

# Parameters for the core deployment 
# ==================================
declare -A core
# machine-type for the Kubernetes cluster nodes. These are described at https://cloud.google.com/compute/docs/machine-types
# and significantly affect the pricing of the cluster.
core[machine_type]="g1-small"
# number of nodes in the cluster node pool. Increasing this will increase costs.
core[node_count]=1
# boot disk size in gigabytes for the cluster nodes. Increasing this will increase costs. 
core[boot_disk_size_gb]=32
# disk size in gigabytes for the persistent disk used for the PVC
core[disk_size_gb]=10
# label for the reserved static IP for the deployment
core[ip]="ip-core"
# cluster name
core[cluster_name]="esp-core-cluster"
# deployment name
core[deployment_name]="esp-core"
# persistent volume claim name (blank if none required)
core[pvc_name]="disk-core-claim"
# persistent volume name (blank if none required)
core[pv_name]="disk-core"
# disk label for the disk backing the PV (blank if none required)
core[disk_name]="disk-core-disk"
# path to script to generate a deployment 
core[deployment_script]="./create_core_deployment.sh"
# name of service for accessing the deployment
core[service_name]="esp-core-envoy"
# Docker build command
core[docker_build_script]="./build_images_core.sh"
# Path to local folder containing files that must be copied to the persistent disk
# for the deployment (blank if not required, ignored if not disk_name given).
#
# For the core deployment, this should currently contain the JSON file containing your
# Firebase private key information (see the main README for details).
core[local_files_path]="./core_disk_files"
# Remote path to copy the local_files into on the remote disk such that when mounted
# the files will be accessible under /mountpoint/remote_files_path. e.g. if the disk
# is mounted to a Pod at /mnt/disk and remote_files_path is /foo/bar, the files
# should be accessible at /mnt/disk/foo/bar by the Pod.
# (blank if not required, but must be set if local_files_path is set)
#
# For the core deployment, this should currently be set to "."
core[remote_files_path]="."
# name of the Google-managed SSL certificate to create for HTTPS access
core[cert_name]="cert-core"
# URL where the service should be accessible (for use when creating the
# certificate and configuring the deployment)
core[domain]="taskmad-backend.grill.science" # e.g. backend-server.online

# Parameters for the chat deployment 
# ==================================
declare -A chat
# machine-type for the Kubernetes cluster nodes. These are described at https://cloud.google.com/compute/docs/machine-types
# and significantly affect the pricing of the cluster.
chat[machine_type]="g1-small"
# number of nodes in the cluster node pool. Increasing this will increase costs.
chat[node_count]=1
# boot disk size in gigabytes for the cluster nodes. Increasing this will increase costs.
chat[boot_disk_size_gb]=32
# disk size in gigabytes for the persistent disk used for the PVC
chat[disk_size_gb]=0
# label for the reserved static IP for the deployment
chat[ip]="ip-chat"
# cluster name
chat[cluster_name]="chat-cluster"
# deployment name
chat[deployment_name]="esp-chat"
# persistent volume claim name (blank if none required)
chat[pvc_name]=""
# persistent volume name (blank if none required)
chat[pv_name]=""
# disk label for the disk backing the PV (blank if none required)
chat[disk_name]=""
# path to script to generate a deployment
chat[deployment_script]="./create_chat_deployment.sh"
# name of service for accessing the deployment
chat[service_name]="chat-app"
# Docker build command
chat[docker_build_script]="./build_images_chatui.sh"
# Path to local folder containing files that must be copied to the persistent disk
# for the deployment (blank if not required, ignored if not disk_name given)
chat[local_files_path]=""
# Remote path to copy the local_files into on the remote disk such that when mounted
# the files will be accessible under /mountpoint/remote_files_path. e.g. if the disk
# is mounted to a Pod at /mnt/disk and remote_files_path is /foo/bar, the files
# should be accessible at /mnt/disk/foo/bar by the Pod
# (blank if not required, but must be set if local_files_path is set)
chat[remote_files_path]=""
# name of the Google-managed SSL certificate to create for HTTPS access
chat[cert_name]="cert-chat"
# URL where the service should be accessible (for use when creating the
# certificate and configuring the deployment)
chat[domain]="taskmad-chat.grill.science" # e.g. chat-uog.online

# Parameters for the Search API deployment
# ==================================
declare -A search
# machine-type for the Kubernetes cluster nodes. These are described at https://cloud.google.com/compute/docs/machine-types
# and significantly affect the pricing of the cluster.
search[machine_type]="e2-standard-4"
# number of nodes in the cluster node pool. Increasing this will increase costs.
search[node_count]=1
# boot disk size in gigabytes for the cluster nodes. Increasing this will increase costs.
search[boot_disk_size_gb]=100
# disk size in gigabytes for the persistent disk used for the PVC
search[disk_size_gb]=100
# label for the reserved static IP for the deployment
search[ip]="ip-search"
# cluster name
search[cluster_name]="search-cluster"
# deployment name
search[deployment_name]="search-api-app"
# persistent volume claim name (blank if none required)
search[pvc_name]="disk-indexes-claim"
# persistent volume name (blank if none required)
search[pv_name]="disk-indexes"
# disk label for the disk backing the PV (blank if none required)
search[disk_name]="disk-indexes-disk"
# path to script to generate a deployment
search[deployment_script]="./create_search_deployment.sh"
# name of service for accessing the deployment
search[service_name]="search-api-service"
# Docker build command
search[docker_build_script]="./build_images_searchapi.sh"
# Path to local folder containing files that must be copied to the persistent disk
# for the deployment (blank if not required, ignored if not disk_name given)
#
# For the search API, this should be a path to a directory containing the
# search indexes you want the API to have access to.
search[local_files_path]="../../search_api_indexes/"
# Remote path to copy the local_files into on the remote disk such that when mounted
# the files will be accessible under /mountpoint/remote_files_path. e.g. if the disk
# is mounted to a Pod at /mnt/disk and remote_files_path is /foo/bar, the files
# should be accessible at /mnt/disk/foo/bar by the Pod
# (blank if not required, but must be set if local_files_path is set)
#
# For the search component, this should currently be set to "."
search[remote_files_path]="."
# name of the Google-managed SSL certificate to create for HTTPS access
search[cert_name]="cert-search"
# URL where the service should be accessible (for use when creating the
# certificate and configuring the deployment)
search[domain]="taskmad-search.grill.science" # e.g. search-api.online

# Parameters for the WOz deployment 
# ==================================
declare -A woz
# machine-type for the Kubernetes cluster nodes. These are described at https://cloud.google.com/compute/docs/machine-types
# and significantly affect the pricing of the cluster.
woz[machine_type]="g1-small"
# number of nodes in the cluster node pool. Increasing this will increase costs.
woz[node_count]=1
# boot disk size in gigabytes for the cluster nodes. Increasing this will increase costs. 
woz[boot_disk_size_gb]=32
# disk size in gigabytes for the persistent disk used for the PVC
woz[disk_size_gb]=10
# label for the reserved static IP for the deployment
woz[ip]="ip-woz"
# cluster name
woz[cluster_name]="search-cluster" # XXX TEMP"woz-cluster" (workaround for GCE quota on clusters per region)
# deployment name
woz[deployment_name]="woz-app" 
# persistent volume claim name (blank if none required)
woz[pvc_name]=""
# persistent volume name (blank if none required)
woz[pv_name]=""
# disk label for the disk backing the PV (blank if none required)
woz[disk_name]=""
# path to script to generate a deployment 
woz[deployment_script]="./create_woz_deployment.sh"
# name of service for accessing the deployment
woz[service_name]="woz-service"
# Docker build command
woz[docker_build_script]="./build_images_woz.sh"
# Path to local folder containing files that must be copied to the persistent disk
# for the deployment (blank if not required, ignored if not disk_name given)
woz[local_files_path]=""
# Remote path to copy the local_files into on the remote disk such that when mounted
# the files will be accessible under /mountpoint/remote_files_path. e.g. if the disk
# is mounted to a Pod at /mnt/disk and remote_files_path is /foo/bar, the files
# should be accessible at /mnt/disk/foo/bar by the Pod 
# (blank if not required, but must be set if local_files_path is set)
woz[remote_files_path]=""
# name of the Google-managed SSL certificate to create for HTTPS access
woz[cert_name]="cert-woz"
# URL where the service should be accessible (for use when creating the
# certificate and configuring the deployment)
woz[domain]="taskmad-woz.grill.science" # e.g. woz-uog.online
