apiVersion: v1
kind: Service
metadata:
  name: esp-core-envoy
  annotations:
    beta.cloud.google.com/backend-config: '{"ports": {"80":"esp-core-backend-config"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  ports:
  - name: http
    port: 80
    targetPort: 10000
    protocol: TCP
  selector:
    app: esp-core
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: esp-core
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: esp-core-custom
  replicas: 1
  template:
    metadata:
      labels:
        app: esp-core
        app.kubernetes.io/name: esp-core-custom
    spec:
      volumes:
        - name: disk-core-volume
          persistentVolumeClaim:
            claimName: disk-core-claim
      containers:
      # [START envoy]
      - name: esp
        image: europe-west2-docker.pkg.dev/agentdialogue-2cd4b/task-mad-images-repository/envoy:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 10000
      # [END envoy]
      - name: core
        image: europe-west2-docker.pkg.dev/agentdialogue-2cd4b/task-mad-images-repository/grpc-server:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8070
        volumeMounts:
          - mountPath: "code/keys"
            name: disk-core-volume 
      - name: grpc-health-proxy
        image: europe-west2-docker.pkg.dev/agentdialogue-2cd4b/task-mad-images-repository/grpc-health-proxy:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8080