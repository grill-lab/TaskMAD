# File need for CD
steps:
# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/envoy:${_IMAGE_VERSION}', '-f', '${_ENVOY_ROOT_FOLDER}/envoy.Dockerfile', '${_ENVOY_ROOT_FOLDER}/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/envoy:${_IMAGE_VERSION}']
# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-server:${_IMAGE_VERSION}', '${_CORE_ROOT_FOLDER}/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-server:${_IMAGE_VERSION}']

# Build the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-health-proxy:${_IMAGE_VERSION}', '-f', '${_HEALTH_ROOT_FOLDER}/grpc_health_proxy.Dockerfile', '${_HEALTH_ROOT_FOLDER}/.']

# Push the image
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'europe-west2-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPOSITORY}/grpc-health-proxy:${_IMAGE_VERSION}']

# Deploy container image to GKE

# Configure service backend 
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - ${_CORE_ROOT_FOLDER}/${_CONFIG_PATH}/${_K8_BACKEND_CONFIG_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Configure frontend
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - ${_CORE_ROOT_FOLDER}/${_CONFIG_PATH}/${_FRONTEND_CONFIG_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Deploy service and pods
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - ${_CORE_ROOT_FOLDER}/${_CONFIG_PATH}/${_K8_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

# Deploy Ingress
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - apply
  - -f
  - ${_CORE_ROOT_FOLDER}/${_CONFIG_PATH}/${_K8_INGRESS_FILE}
  env:
  - CLOUDSDK_COMPUTE_REGION=${_CLUSTER_LOCATION}
  - CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}

substitutions:
  _ARTIFACT_REGISTRY_REPOSITORY: task-mad-images-repository 
  _CLUSTER_LOCATION: europe-central2-a
  _CLUSTER_NAME: esp-core-cluster
  _IMAGE_VERSION: latest
  _CORE_ROOT_FOLDER: core
  _ENVOY_ROOT_FOLDER: envoy
  _HEALTH_ROOT_FOLDER: grpc_health_proxy
  _CONFIG_PATH: deployment_config/cloud
  _FRONTEND_CONFIG_FILE: frontend_config.yaml
  _K8_BACKEND_CONFIG_FILE: backend_config.yaml
  _K8_INGRESS_FILE: esp_core_managed_cert_ingress.yaml
  _K8_FILE: core_deployment.yaml
  
# Timeout for 30 mins
timeout: 1800s